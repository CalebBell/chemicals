# DO NOT EDIT - AUTOMATICALLY GENERATED BY tests/make_test_stubs.py!
from typing import List
from pandas.core.frame import DataFrame
from typing import (
    List,
    Optional,
    Union,
)


def Stockmayer(
    CASRN: str = ...,
    Tm: Optional[float] = ...,
    Tb: Optional[float] = ...,
    Tc: Optional[float] = ...,
    Zc: Optional[float] = ...,
    omega: Optional[float] = ...,
    method: Optional[str] = ...
) -> Optional[float]: ...


def Stockmayer_methods(
    CASRN: Optional[str] = ...,
    Tm: Optional[float] = ...,
    Tb: Optional[float] = ...,
    Tc: Optional[float] = ...,
    Zc: Optional[float] = ...,
    omega: Optional[float] = ...
) -> List[str]: ...


def Tstar(T: float, epsilon_k: Optional[float] = ..., epsilon: Optional[float] = ...) -> float: ...


def __getattr__(name: str) -> DataFrame: ...


def _load_LJ_data() -> None: ...


def collision_integral_Kim_Monroe(Tstar: float, l: int = ..., s: int = ...) -> float: ...


def collision_integral_Neufeld_Janzen_Aziz(Tstar: float, l: int = ..., s: int = ...) -> float: ...


def epsilon_Bird_Stewart_Lightfoot_boiling(Tb: float) -> float: ...


def epsilon_Bird_Stewart_Lightfoot_critical(Tc: float) -> float: ...


def epsilon_Bird_Stewart_Lightfoot_melting(Tm: float) -> float: ...


def epsilon_Flynn(Tc: float) -> float: ...


def epsilon_Stiel_Thodos(Tc: float, Zc: float) -> float: ...


def epsilon_Tee_Gotoh_Steward_1(Tc: float) -> float: ...


def epsilon_Tee_Gotoh_Steward_2(Tc: float, omega: float) -> float: ...


def molecular_diameter(
    CASRN: Optional[str] = ...,
    Tc: Optional[float] = ...,
    Pc: Optional[float] = ...,
    Vc: Optional[float] = ...,
    Zc: Optional[float] = ...,
    omega: Optional[float] = ...,
    Vm: Optional[float] = ...,
    Vb: Optional[float] = ...,
    method: Optional[str] = ...
) -> Optional[float]: ...


def molecular_diameter_methods(
    CASRN: Optional[str] = ...,
    Tc: Optional[float] = ...,
    Pc: Optional[float] = ...,
    Vc: Optional[float] = ...,
    Zc: Optional[float] = ...,
    omega: Optional[float] = ...,
    Vm: Optional[float] = ...,
    Vb: Optional[float] = ...
) -> List[str]: ...


def sigma_Bird_Stewart_Lightfoot_boiling(Vb: float) -> float: ...


def sigma_Bird_Stewart_Lightfoot_critical_1(Vc: float) -> float: ...


def sigma_Bird_Stewart_Lightfoot_critical_2(Tc: float, Pc: float) -> float: ...


def sigma_Bird_Stewart_Lightfoot_melting(Vm: float) -> float: ...


def sigma_Flynn(Vc: float) -> float: ...


def sigma_Silva_Liu_Macedo(Tc: float, Pc: float) -> Optional[float]: ...


def sigma_Stiel_Thodos(Vc: float, Zc: float) -> float: ...


def sigma_Tee_Gotoh_Steward_1(Tc: float, Pc: float) -> float: ...


def sigma_Tee_Gotoh_Steward_2(Tc: float, Pc: float, omega: float) -> float: ...

__all__: List[str]