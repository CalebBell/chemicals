# DO NOT EDIT - AUTOMATICALLY GENERATED BY tests/make_test_stubs.py!
from typing import List
from pandas.core.frame import DataFrame
from typing import (
    Dict,
    List,
    Optional,
    Union,
)


def Gibbs_formation(
    dHf: int,
    S0_abs: float,
    dHfs_std: List[int],
    S0_abs_elements: List[float],
    coeffs_elements: List[float],
    T_ref: float = ...
) -> float: ...


def Hf_basis_converter(Hvapm: Optional[int], Hf_liq: Optional[int] = ..., Hf_gas: Optional[int] = ...) -> int: ...


def Hfg(CASRN: str, get_methods: bool = ..., method: Optional[str] = ...) -> Optional[Union[List[str], float]]: ...


def Hfl(CASRN: str, get_methods: bool = ..., method: Optional[str] = ...) -> Optional[Union[List[str], float]]: ...


def Hfs(CASRN: str, get_methods: bool = ..., method: Optional[str] = ...) -> Union[List[str], float]: ...


def S0g(CASRN: str, get_methods: bool = ..., method: Optional[str] = ...) -> Union[List[str], float]: ...


def S0l(CASRN: str, get_methods: bool = ..., method: Optional[str] = ...) -> Union[List[str], float]: ...


def S0s(CASRN: str, get_methods: bool = ..., method: Optional[str] = ...) -> Union[List[str], float]: ...


def __getattr__(name: str) -> DataFrame: ...


def _load_reaction_data() -> None: ...


def balance_stoichiometry(matrix: List[List[int]], rounding: int = ..., allow_fractional: bool = ...) -> List[float]: ...


def entropy_formation(Hf: int, Gf: int, T_ref: float = ...) -> float: ...


def stoichiometric_matrix(atomss: List[Dict[str, int]], reactants: List[bool]) -> List[List[int]]: ...

__all__: List[str]